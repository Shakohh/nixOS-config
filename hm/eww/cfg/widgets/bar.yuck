;;=========================================;;
;;==============- VARIABLES -==============;;
;;=========================================;;

(defvar date_reveal "false")
(defvar storage_reveal false)
(defvar root_usage_reveal "false")
(defvar home_usage_reveal "false")
(defvar ssd_usage_reveal "false")
(defvar sshd_usage_reveal "false")




;;=========================================;;
;;===============- SCRIPTS -===============;;
;;=========================================;;

(deflisten used_tags "ristate -vt | jq --unbuffered -c '.viewstag?.ViewSonicCorporation? // [] | unique'")
(deflisten focused_tags "ristate -t | jq --unbuffered -c '.tags?.ViewSonicCorporation? // []'")
(defvar all_tags "[1,2,3,4,5,6,7,8,9]")
(defpoll time :interval "10s" "date +%H:%M")




;;=========================================;;
;;==============- LEFT PART -==============;;
;;=========================================;;

(defwidget left []
  (box 
    :hexpand false
    :halign "start"
    :space-evenly false
    (leftmenu)
    (date_bar)
  )
)

(defwidget leftmenu []
  (box
    :space-evenly false
    :halign "start"
    :class "leftmenu"
    (label
      :text ""
      :class "leftmenu"
      :xalign 0.4
    )
  )
)

(defwidget date_bar []
  (box
    :space-evenly true
    :halign "center"
    :class "date_bar"
    (label
      :text "${jour+" "+jour-n+" "+mois}"
    )
  )
)




;;=========================================;;
;;=============- CENTER PART -=============;;
;;=========================================;;

(defwidget middle []
  (box 
    :halign "center"
    :space-evenly false
    (tags)
  )
)

(defwidget tags []
  (box
    :class "tags"
    :halign "center"
    :valign "center"
    (for tag in all_tags
      (button
        :class "tag"
        :halign "center"
        :valign "center"
        :onclick "riverctl set-focused-tags $((1 << (${tag} - 1)))"
        :onrightclick "riverctl toggle-focused-tags $((1 << (${tag} - 1)))"
        (box
          :class `${(tag =~ focused_tags ? "focused" : "${tag =~ used_tags ? 'used' : ''}")}`
          :halign "center"
          :valign "center"
          (label
            :text "${tag}"
            :halign "center"
            :valign "center"
            :hexpand true
          )
        )
      )
    )
  )
)




;;=========================================;;
;;=============- RIGHT  PART -=============;;
;;=========================================;;

(defwidget right []
  (box 
    :hexpand false
    :halign "end"
    :space-evenly false
    (time)
    (rightmenu)
  )
)

(defwidget rightmenu []
  (box
    :space-evenly false
    (eventbox
      :onhover "${EWW_CMD} update storage_reveal=true"
      :onhoverlost "${EWW_CMD} update storage_reveal=false"
      (box
        :space-evenly false
        :halign "start"
        :class "rightmenu"
        (revealer
          :reveal storage_reveal
          :transition "slideleft"
          :class "rightmenu"
          (storage)
        )
        (label
          :text ""
          :class "rightmenu"
          :xalign 0.4
          :wrap true
        )
      )
    )
  )
)

(defwidget storage []
  (box
    :class "storage"
    :space-evenly false
    :vexpand true
    :spacing 4
    (root_usage)
    (home_usage)
    (ssd_usage)
    (sshd_usage)
  )
)

(defwidget root_usage []
  (eventbox
    :onhover "${EWW_CMD} update root_usage_reveal=true"
    :onhoverlost "${EWW_CMD} update root_usage_reveal=false"
    :class "storage"
    (circular-progress
        :value {EWW_DISK["/"].used_perc}
        :thickness 4
        :start-at "75"
        :clockwise "false"
        :class "hwinfo_root"
      (box
        :class "hwinfo"
        :tooltip {"Root: " + (100 - round(EWW_DISK["/"].used_perc,0)) + "% libre"}
        (box
          :class "value-in-circles"
          :valign "fill"
          :halign "fill"
          "${root_usage_reveal == true ? (round(EWW_DISK["/"].used_perc,0)) : "󰉑"}"
        )
      )      
    )
  )
)

(defwidget home_usage []
  (eventbox
    :onhover "${EWW_CMD} update home_usage_reveal=true"
    :onhoverlost "${EWW_CMD} update home_usage_reveal=false"
    :class "storage"
    (circular-progress
        :value {EWW_DISK["/home"].used_perc}
        :thickness 4
        :start-at "75"
        :clockwise "false"
        :class "hwinfo_home"
      (box
        :class "hwinfo"
        :tooltip {"Home: " + (100 - round(EWW_DISK["/home"].used_perc,0)) + "% libre"}
        (box
          :class "value-in-circles"
          :valign "fill"
          :halign "fill"
          "${home_usage_reveal == true ? (round(EWW_DISK["/home"].used_perc,0)) : "󱂵"}"
        )
      )      
    )
  )
)

(defwidget ssd_usage []
  (eventbox
    :onhover "${EWW_CMD} update ssd_usage_reveal=true"
    :onhoverlost "${EWW_CMD} update ssd_usage_reveal=false"
    :class "storage"
    (circular-progress
        :value {EWW_DISK["/media/SSD"].used_perc}
        :thickness 4
        :start-at "75"
        :clockwise "false"
        :class "hwinfo_ssd"
      (box
        :class "hwinfo"
        :tooltip {"SSD: " + (100 - round(EWW_DISK["/media/SSD"].used_perc,0)) + "% libre"}
        (box
          :class "value-in-circles"
          :valign "fill"
          :halign "fill"
          "${ssd_usage_reveal == true ? (round(EWW_DISK["/media/SSD"].used_perc,0)) : "󱧺"}"
        )
      )      
    )
  )
)

(defwidget sshd_usage []
  (eventbox
    :onhover "${EWW_CMD} update sshd_usage_reveal=true"
    :onhoverlost "${EWW_CMD} update sshd_usage_reveal=false"
    :class "storage"
    (circular-progress
        :value {EWW_DISK["/media/SSHD"].used_perc}
        :thickness 4
        :start-at "75"
        :clockwise "false"
        :class "hwinfo_sshd"
      (box
        :class "hwinfo"
        :tooltip {"SSHD: " + (100 - round(EWW_DISK["/media/SSHD"].used_perc,0)) + "% libre"}
        (box
          :class "value-in-circles"
          :valign "fill"
          :halign "fill"
          "${sshd_usage_reveal == true ? (round(EWW_DISK["/media/SSHD"].used_perc,0)) : "󱋣"}"
        )
      )      
    )
  )
)

(defwidget time []
  (box
    :class "rightmenu_box"
    :space-evenly false
    (box
      :space-evenly false
      :class "time"
      :tooltip "${jour+" "+jour-n+" "+mois}"
      (label
        :text time
        :class "time"
      )
    )
  )
)




;;=========================================;;
;;============- FINAL  WIDGET -============;;
;;=========================================;;

(defwidget bar []
  (centerbox
    :class "bar"
    (left)
    (middle)
    (right)
  )
)




;;=========================================;;
;;=================- EOF -=================;;
;;=========================================;;
